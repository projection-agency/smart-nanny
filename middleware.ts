// middleware.ts
import { NextResponse } from 'next/server';
import type { NextRequest } from 'next/server';

const locales = ['ua', 'en'];

export function middleware(request: NextRequest) {
  const { pathname } = request.nextUrl;

  // –†–µ–¥—ñ—Ä–µ–∫—Ç –∑ –∫–æ—Ä–µ–Ω—è `/` ‚Üí `/ua`
  if (pathname === '/') {
    return NextResponse.redirect(new URL('/ua', request.url));
  }

  // –î–æ–∑–≤–æ–ª–∏—Ç–∏ –¥–∞–ª—ñ, —è–∫—â–æ —à–ª—è—Ö –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ –≤–∞–ª—ñ–¥–Ω–æ—ó –ª–æ–∫–∞–ª—ñ
  if (locales.some((locale) => pathname.startsWith(`/${locale}`))) {
    return NextResponse.next();
  }

  // –£—Å—ñ —ñ–Ω—à—ñ ‚Äî 404 (–º–æ–∂–µ—à –∑–º—ñ–Ω–∏—Ç–∏)
  return NextResponse.rewrite(new URL('/_not-found', request.url));
}

export const config = {
  matcher: [
    '/',                // üü¢ –û–±–æ–≤'—è–∑–∫–æ–≤–æ —è–≤–Ω–æ
    '/((?!_next|api|favicon.ico|icons).*)', // –¥–ª—è —Ä–µ—à—Ç–∏
  ],
};
